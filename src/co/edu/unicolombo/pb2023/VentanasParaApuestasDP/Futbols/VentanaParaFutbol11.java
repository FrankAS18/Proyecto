/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.unicolombo.pb2023.VentanasParaApuestasDP.Futbols;

import co.edu.unicolombo.pb2023.Datos.EquiposFutbol;
import co.edu.unicolombo.pb2023.Datos.Recarga_Retiro;
import co.edu.unicolombo.pb2023.Datos.Usuario;
import co.edu.unicolombo.pb2023.VentanasParaApuestasDP.VentanaParaFutbols;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class VentanaParaFutbol11 extends javax.swing.JDialog {

    private Usuario u;
    /**
     * Creates new form VentanaParaFutbol11
     */
    public VentanaParaFutbol11(java.awt.Frame parent, boolean modal) {
        
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaJuegos = new javax.swing.JTable();
        botonAtras = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        botonConsultarSaldo = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        PanelApuestas = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("BIENVENIDO TE DAMOS NUSTROS MAS CORDIALES SALUDOS");
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("ESTOS SON LOS JUEGOS PARA EL DIA DE HOY");
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 370, -1));

        jTextField4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jTextField4.setText("HAS TUS APUESTAS AQUI");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 90, -1, -1));

        jTextField3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("!SUERTEÂ¡, LA NECESITARAS");
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, -1));

        TablaJuegos.setBackground(new java.awt.Color(0, 51, 255));
        TablaJuegos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TablaJuegos.setForeground(new java.awt.Color(255, 255, 255));
        TablaJuegos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaJuegos.setToolTipText("");
        TablaJuegos.setEnabled(false);
        jScrollPane1.setViewportView(TablaJuegos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 490, 110));

        botonAtras.setBackground(new java.awt.Color(255, 0, 0));
        botonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back_arrow_14429.png"))); // NOI18N
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });
        jPanel1.add(botonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, 340, 40));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 210, 340, 40));

        botonConsultarSaldo.setBackground(new java.awt.Color(255, 0, 0));
        botonConsultarSaldo.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        botonConsultarSaldo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/saldo-de-gastos.png"))); // NOI18N
        botonConsultarSaldo.setText("CONSULTAR SALDO");
        botonConsultarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarSaldoActionPerformed(evt);
            }
        });
        jPanel1.add(botonConsultarSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, -1, -1));

        jComboBox3.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, 340, 40));

        jComboBox4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 350, 340, 40));

        jComboBox5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 420, 340, 40));

        PanelApuestas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PanelApuestas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cinco-deportes-que-seguro-no-conocias.jpg"))); // NOI18N
        jPanel1.add(PanelApuestas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 320, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class EquiposEnfrentamientos {
        public ArrayList<EquiposFutbol> equipos;

        public EquiposEnfrentamientos() {
            equipos = new ArrayList<>();
            equipos.add(new EquiposFutbol("Real Madrid"));
            equipos.add(new EquiposFutbol("FC Barcelona"));
            equipos.add(new EquiposFutbol("Manchester United"));
            equipos.add(new EquiposFutbol("Liverpool FC"));
            equipos.add(new EquiposFutbol("Bayern Munich"));
            equipos.add(new EquiposFutbol("AC Milan"));
            equipos.add(new EquiposFutbol("Paris Saint-Germain"));
            equipos.add(new EquiposFutbol("Juventus"));
            equipos.add(new EquiposFutbol("Chelsea FC"));
            equipos.add(new EquiposFutbol("Arsenal FC"));
            equipos.add(new EquiposFutbol("Borussia Dortmund"));
            equipos.add(new EquiposFutbol("Manchester City"));
            equipos.add(new EquiposFutbol("Atletico Madrid"));
            equipos.add(new EquiposFutbol("Inter Milan"));
            equipos.add(new EquiposFutbol("Tottenham Hotspur"));
            equipos.add(new EquiposFutbol("Real Betis"));
            equipos.add(new EquiposFutbol("Valencia CF"));
            equipos.add(new EquiposFutbol("Sevilla FC"));
            equipos.add(new EquiposFutbol("Napoli"));
            equipos.add(new EquiposFutbol("AS Roma"));
        }
        public ArrayList<EquiposFutbol> elegirEquiposAleatorios() {
            if (equipos.size() < 10) {
                System.out.println("No hay suficientes equipos para crear 5 enfrentamientos.");
                return new ArrayList<>();
            }

            ArrayList<EquiposFutbol> equiposAleatorios = new ArrayList<>();
            ArrayList<EquiposFutbol> copiaEquipos = new ArrayList<>(equipos);
            Collections.shuffle(copiaEquipos);

            for (int i = 0; i < 10; i++) {
                equiposAleatorios.add(copiaEquipos.get(i));
            }

            return equiposAleatorios;
        }
        public void crearEnfrentamientos(ArrayList<EquiposFutbol> equiposAleatorios) {
            if (equiposAleatorios.size() != 10) {
                //System.out.println("Se necesitan exactamente 10 equipos para crear 5 enfrentamientos.");
                JOptionPane.showMessageDialog(null, "Se necesitan exactamente 10 equipos para crear 5 enfrentamientos.");
                return;
            }

            String Columnas[] = {"Equipo Local", "               vs" , "Equipo Visitante"};

            // Crear una matriz para los enfrentamientos
            Object filas[][] = new Object[5][3];

            for (int i = 0; i < 5; i++) {
                EquiposFutbol equipoLocal = equiposAleatorios.get(i * 2);
                EquiposFutbol equipoVisitante = equiposAleatorios.get(i * 2 + 1);

                if (equipos.contains(equipoLocal) && equipos.contains(equipoVisitante)) {
                    // Asignar los nombres de los equipos a las celdas correspondientes
                    filas[i][0] = equipoLocal.getNombre();
                    filas[i][1] = "           vs";
                    filas[i][2] = equipoVisitante.getNombre();

                } else {
                    // Si alguno de los equipos no existe, mostrar un mensaje de error
                    JOptionPane.showMessageDialog(null, "Alguno de los equipos seleccionados no existe en la lista de equipos predefinidos.");
                    return;
                }
            }

            DefaultTableModel model = new DefaultTableModel(filas, Columnas);
            TablaJuegos.setModel(model);

        }
        public List<String> seleccionarGanadores(ArrayList<EquiposFutbol> equiposAleatorios) {
            if (equiposAleatorios.size() != 10) {
                // Mostrar un mensaje de error si no hay 10 equipos
                JOptionPane.showMessageDialog(null, "Se necesitan exactamente 10 equipos para crear 5 enfrentamientos.");
                return Collections.emptyList(); // Devolver una lista vacÃ­a en caso de error
            }

            List<String> ganadores = new ArrayList<>();
            Random random = new Random(); // Crear un objeto Random

            for (int i = 0; i < 5; i++) {
                EquiposFutbol equipoLocal = equiposAleatorios.get(i * 2);
                EquiposFutbol equipoVisitante = equiposAleatorios.get(i * 2 + 1);

                String ganador;
                if (random.nextBoolean()) { // Generar un valor booleano aleatorio
                    ganador = equipoLocal.getNombre();
                } else {
                    ganador = equipoVisitante.getNombre();
                }
                ganadores.add(ganador);
            }

            return ganadores;
 
        }
        
        public void realizarApuestaJuego1(JComboBox<String> comboBox1,ArrayList<EquiposFutbol> equiposAleatorios, Usuario u) {
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            // Obtener los nombres de los equipos del primer enfrentamiento
            for (int i = 0; i < 2; i++) {
                comboBoxModel.addElement(equiposAleatorios.get(i).getNombre());
            }

            comboBox1.setModel(comboBoxModel);

            // Manejar la selecciÃ³n del usuario
            comboBox1.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    JComboBox<String> combo = (JComboBox<String>) e.getSource();
                    String equipoElegido = (String) combo.getSelectedItem();

                    // Obtener el ganador real del primer enfrentamiento utilizando la funciÃ³n seleccionarGanadores
                    String ganadorReal = seleccionarGanadores(equiposAleatorios).get(0); // El Ã­ndice 0 representa el primer enfrentamiento
                    
                    Recarga_Retiro recargaRetiroUsuario = null; // AsegÃºrate de inicializar esto con el objeto Recarga_Retiro adecuado
                    
                    if (equipoElegido != null && recargaRetiroUsuario != null) {
                        if (recargaRetiroUsuario.saldo <= 0) {
                            JOptionPane.showMessageDialog(null, "Saldo insuficiente. Vuelve al menÃº principal y recarga tu saldo para apostar.");
                        } else {
                            String numero = JOptionPane.showInputDialog("Ingresa un monto para su apuesta");
                            double apuesta = Double.parseDouble(numero); // Puedes permitir al usuario ingresar la cantidad de la apuesta.

                            if (apuesta > recargaRetiroUsuario.saldo) {
                                JOptionPane.showMessageDialog(null, "Saldo insuficiente para hacer la apuesta.");
                            } else {
                                if (equipoElegido.equals(ganadorReal)) {
                                    double nuevoSaldo = recargaRetiroUsuario.saldo + apuesta; // Duplicar la apuesta y agregarla al saldo si gana.
                                    recargaRetiroUsuario.saldo = nuevoSaldo;
                                    JOptionPane.showMessageDialog(null, "Â¡Felicidades! Ganaste el enfrentamiento 1.");
                                } else {
                                    double nuevoSaldo = recargaRetiroUsuario.saldo - apuesta; // Restar la apuesta si pierde.
                                    recargaRetiroUsuario.saldo = nuevoSaldo;
                                    JOptionPane.showMessageDialog(null, "Lo siento, perdiste el enfrentamiento 1.");
                                }
                                // Actualizar el saldo del usuario en la base de datos o donde lo almacenes.
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error.");
                    }
                }
            });            
        }

        public void realizarApuestasJuego2(JComboBox<String> comboBox2,ArrayList<EquiposFutbol> equiposAleatorios) {
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            // Obtener los nombres de los equipos del segundo enfrentamiento
            for (int i = 2; i < 4; i++) {
                comboBoxModel.addElement(equiposAleatorios.get(i).getNombre());
            }

            comboBox2.setModel(comboBoxModel);

            // Manejar la selecciÃ³n del usuario
            comboBox2.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    JComboBox<String> combo = (JComboBox<String>) e.getSource();
                    String equipoElegido = (String) combo.getSelectedItem();

                    // Obtener el ganador real del enfrentamiento 2 utilizando la funciÃ³n seleccionarGanadores
                    String ganadorReal = seleccionarGanadores(equiposAleatorios).get(1); // El Ã­ndice 1 representa el segundo enfrentamiento

                    Recarga_Retiro recargaRetiroUsuario = null; // AsegÃºrate de inicializar esto con el objeto Recarga_Retiro adecuado

                    if (equipoElegido != null && recargaRetiroUsuario != null) {
                        if (recargaRetiroUsuario.saldo <= 0) {
                            JOptionPane.showMessageDialog(null, "Saldo insuficiente. Vuelve al menÃº principal y recarga tu saldo para apostar.");
                        } else {
                            String numero = JOptionPane.showInputDialog("Ingresa un monto para su apuesta");
                            double apuesta = Double.parseDouble(numero); // Puedes permitir al usuario ingresar la cantidad de la apuesta.

                            if (apuesta > recargaRetiroUsuario.saldo) {
                                JOptionPane.showMessageDialog(null, "Saldo insuficiente para hacer la apuesta.");
                            } else {
                                if (equipoElegido.equals(ganadorReal)) {
                                    double nuevoSaldo = recargaRetiroUsuario.saldo + apuesta; // Duplicar la apuesta y agregarla al saldo si gana.
                                    recargaRetiroUsuario.saldo = nuevoSaldo;
                                    JOptionPane.showMessageDialog(null, "Â¡Felicidades! Ganaste el enfrentamiento 2.");
                                } else {
                                    double nuevoSaldo = recargaRetiroUsuario.saldo - apuesta; // Restar la apuesta si pierde.
                                    recargaRetiroUsuario.saldo = nuevoSaldo;
                                    JOptionPane.showMessageDialog(null, "Lo siento, perdiste el enfrentamiento 2.");
                                }
                                // Actualizar el saldo del usuario en la base de datos o donde lo almacenes.
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error.");
                    }
                }
            });
        }
        public void realizarApuestasJuego3(JComboBox<String> comboBox3,ArrayList<EquiposFutbol> equiposAleatorios) {
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            // Obtener los nombres de los equipos del tercer enfrentamiento
            for (int i = 4; i < 6; i++) {
                comboBoxModel.addElement(equiposAleatorios.get(i).getNombre());
            }

            comboBox3.setModel(comboBoxModel);

            // Obtener el ganador real del enfrentamiento 3
            String ganadorReal = seleccionarGanadores(equiposAleatorios).get(2); // El Ã­ndice 2 representa el tercer enfrentamiento

            // Manejar la selecciÃ³n del usuario
            comboBox3.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    JComboBox<String> combo = (JComboBox<String>) e.getSource();
                    String equipoElegido = (String) combo.getSelectedItem();

                    if (equipoElegido != null) {
                        if (equipoElegido.equals(ganadorReal)) {
                            JOptionPane.showMessageDialog(null, "Â¡Felicidades! Ganaste el enfrentamiento 3.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Lo siento, perdiste el enfrentamiento 3.");
                        }
                    }
                }
            });
        }
        public void realizarApuestasJuego4(JComboBox<String> comboBox4,ArrayList<EquiposFutbol> equiposAleatorios) {
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            // Obtener los nombres de los equipos del cuarto enfrentamiento
            for (int i = 6; i < 8; i++) {
                comboBoxModel.addElement(equiposAleatorios.get(i).getNombre());
            }

            comboBox4.setModel(comboBoxModel);

            // Obtener el ganador real del enfrentamiento 4
            String ganadorReal = seleccionarGanadores(equiposAleatorios).get(3); // El Ã­ndice 3 representa el cuarto enfrentamiento

            // Manejar la selecciÃ³n del usuario
            comboBox4.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    JComboBox<String> combo = (JComboBox<String>) e.getSource();
                    String equipoElegido = (String) combo.getSelectedItem();

                    if (equipoElegido != null) {
                        if (equipoElegido.equals(ganadorReal)) {
                            JOptionPane.showMessageDialog(null, "Â¡Felicidades! Ganaste el enfrentamiento 4.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Lo siento, perdiste el enfrentamiento 4.");
                        }
                    }
                }
            });
        }
        public void realizarApuestasJuego5(JComboBox<String> comboBox5,ArrayList<EquiposFutbol> equiposAleatorios) {
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            // Obtener los nombres de los equipos del quinto enfrentamiento
            for (int i = 8; i < 10; i++) {
                comboBoxModel.addElement(equiposAleatorios.get(i).getNombre());
            }

            comboBox5.setModel(comboBoxModel);

            // Obtener el ganador real del enfrentamiento 5
            String ganadorReal = seleccionarGanadores(equiposAleatorios).get(4); // El Ã­ndice 4 representa el quinto enfrentamiento

            // Manejar la selecciÃ³n del usuario
            comboBox5.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    JComboBox<String> combo = (JComboBox<String>) e.getSource();
                    String equipoElegido = (String) combo.getSelectedItem();

                    if (equipoElegido != null) {
                        if (equipoElegido.equals(ganadorReal)) {
                            JOptionPane.showMessageDialog(null, "Â¡Felicidades! Ganaste el enfrentamiento 5.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Lo siento, perdiste el enfrentamiento 5.");
                        }
                    }
                }
            });
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        EquiposEnfrentamientos equiposManager = new EquiposEnfrentamientos();
        ArrayList<EquiposFutbol> equiposAleatorios = equiposManager.elegirEquiposAleatorios();
        equiposManager.crearEnfrentamientos(equiposAleatorios);
        equiposManager.realizarApuestaJuego1(jComboBox1, equiposAleatorios, u);        
        equiposManager.realizarApuestasJuego2(jComboBox2,equiposAleatorios);        
        equiposManager.realizarApuestasJuego3(jComboBox3,equiposAleatorios);        
        equiposManager.realizarApuestasJuego4(jComboBox4,equiposAleatorios);        
        equiposManager.realizarApuestasJuego5(jComboBox5,equiposAleatorios);        
        
    }//GEN-LAST:event_formWindowOpened

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        // TODO add your handling code here:
        this.dispose();
        VentanaParaFutbols ventana = new VentanaParaFutbols(null, rootPaneCheckingEnabled);
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
    }//GEN-LAST:event_botonAtrasActionPerformed

    private void botonConsultarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarSaldoActionPerformed
        // TODO add your handling code h ere:
        this.dispose();
        VentanaConsultarSaldoEnFutbol ventana = new VentanaConsultarSaldoEnFutbol(null, rootPaneCheckingEnabled);
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
    }//GEN-LAST:event_botonConsultarSaldoActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaParaFutbol11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaParaFutbol11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaParaFutbol11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaParaFutbol11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaParaFutbol11 dialog = new VentanaParaFutbol11(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PanelApuestas;
    private javax.swing.JTable TablaJuegos;
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonConsultarSaldo;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
